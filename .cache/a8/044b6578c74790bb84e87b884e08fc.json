{"id":"../node_modules/overstat/lib/index.js","dependencies":[{"name":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/package.json","includedInParent":true,"mtime":1611186518316},{"name":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/package.json","includedInParent":true,"mtime":1611186771388},{"name":"url-join","loc":{"line":1,"column":24},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/index.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/url-join/lib/url-join.js"},{"name":"request-promise","loc":{"line":2,"column":24},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/index.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/request-promise/lib/rp.js"},{"name":"debug","loc":{"line":3,"column":22},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/index.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/node_modules/debug/src/browser.js"},{"name":"./scraper","loc":{"line":5,"column":34},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/index.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/scraper.js"}],"generated":{"js":"const urlJoin = require('url-join');\nconst request = require('request-promise');\nconst debug = require('debug');\n\nconst scrapePlayerStats = require('./scraper');\n\nconst log = debug('oversmash');\n\nconst defaultOptions = {\n    normalizeNames: true,\n    normalizeValues: true,\n    normalizeNamesAs: 'snake',\n    percentsToInts: true,\n    defaultRegion: 'us',\n    defaultPlatform: 'pc',\n    accountIdentityRegex: /^\\/career\\/([\\w]+)\\/.+$/,\n    requestOptions: {\n        baseUrl: 'https://playoverwatch.com/en-us',\n        headers: {\n            'User-Agent': 'https://github.com/filp/oversmash (hi jeff)'\n        }\n    }\n};\n\n// Uses an internal Blizzard API to retrieve basic details about a player,\n// through their Blizzard account ID. The API returns basic details about\n// the players' career - display names, levels, and portraits, for each\n// platform/region the player participated in.\nfunction findPlayer (req, options, name) {\n    // Turn the last dash into a URL-encoded pound sign, so we can get\n    // a positive match including the account ID\n    const nameEscaped = name.replace(/-(\\d+)$/, '%23$1'); // # == %23\n\n    // Note that the pound sign here is ignored, we keep it in just to make\n    // debug logs clearer, and because it doesn't cause any harm:\n    const searchPath = urlJoin('/search/account-by-name', nameEscaped);\n\n    log('findPlayer/http get', searchPath);\n\n    return req.get(searchPath, { json: true }).then((response) => {\n        log('findPlayer/http complete', response);\n\n        const accounts = response.map(account => {\n            return {\n                level: account.level,\n                portrait: account.portrait,\n                displayName: account.name,\n                platform: account.platform\n            };\n        });\n\n        return {\n            name: name,\n            accounts\n        };\n    });\n}\n\n// Scrapes the playoverwatch website for details on a players' career, for\n// a given region and platform.\nfunction findPlayerStats (req, options, platform, region, name) {\n    const scrapePath = urlJoin('/career', platform, region, name);\n    log('findPlayerStats/http get', scrapePath);\n\n    return req.get(scrapePath).then((html) => {\n        log('findPlayerStats/http complete');\n\n        const stats = scrapePlayerStats(options, html);\n        return { name, region, platform, stats };\n    });\n}\n\n// Accepts an options object (taking precedence over defaultOptions)\n// and returns a new oversmash object\nmodule.exports = function main (callerOptions = {}) {\n    const sharedOptions = { ...defaultOptions, ...callerOptions };\n\n    // Make sure we know how the caller expects names to be normalized\n    if (['snake', 'camel'].indexOf(sharedOptions.normalizeNamesAs) === -1) {\n        throw new Error('normalizeNamesAs must be set to \\'snake\\' or \\'camel\\'');\n    }\n\n    // This will blow-up if the caller overrides callerOptions in weird ways\n    const defaultRegion = sharedOptions.defaultRegion;\n    const defaultPlatform = sharedOptions.defaultPlatform;\n\n    // Prepare an instance of `request` configured with requestOptions\n    // as provided by the caller (or from defaultOptions)\n    const req = request.defaults(sharedOptions.requestOptions);\n\n    log('default region', defaultRegion);\n    log('default platform', defaultPlatform);\n\n    return {\n        player (name) {\n            return findPlayer(req, sharedOptions, name);\n        },\n\n        playerStats (name, region = defaultRegion, platform = defaultPlatform) {\n            return findPlayerStats(req, sharedOptions, platform, region, name);\n        }\n    };\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/overstat/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/overstat/lib/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}}],"sources":{"../node_modules/overstat/lib/index.js":"const urlJoin = require('url-join');\nconst request = require('request-promise');\nconst debug = require('debug');\n\nconst scrapePlayerStats = require('./scraper');\n\nconst log = debug('oversmash');\n\nconst defaultOptions = {\n    normalizeNames: true,\n    normalizeValues: true,\n    normalizeNamesAs: 'snake',\n    percentsToInts: true,\n    defaultRegion: 'us',\n    defaultPlatform: 'pc',\n    accountIdentityRegex: /^\\/career\\/([\\w]+)\\/.+$/,\n    requestOptions: {\n        baseUrl: 'https://playoverwatch.com/en-us',\n        headers: {\n            'User-Agent': 'https://github.com/filp/oversmash (hi jeff)'\n        }\n    }\n};\n\n// Uses an internal Blizzard API to retrieve basic details about a player,\n// through their Blizzard account ID. The API returns basic details about\n// the players' career - display names, levels, and portraits, for each\n// platform/region the player participated in.\nfunction findPlayer (req, options, name) {\n    // Turn the last dash into a URL-encoded pound sign, so we can get\n    // a positive match including the account ID\n    const nameEscaped = name.replace(/-(\\d+)$/, '%23$1'); // # == %23\n\n    // Note that the pound sign here is ignored, we keep it in just to make\n    // debug logs clearer, and because it doesn't cause any harm:\n    const searchPath = urlJoin('/search/account-by-name', nameEscaped);\n\n    log('findPlayer/http get', searchPath);\n\n    return req.get(searchPath, { json: true }).then((response) => {\n        log('findPlayer/http complete', response);\n\n        const accounts = response.map(account => {\n            return {\n                level: account.level,\n                portrait: account.portrait,\n                displayName: account.name,\n                platform: account.platform\n            };\n        });\n\n        return {\n            name: name,\n            accounts\n        };\n    });\n}\n\n// Scrapes the playoverwatch website for details on a players' career, for\n// a given region and platform.\nfunction findPlayerStats (req, options, platform, region, name) {\n    const scrapePath = urlJoin('/career', platform, region, name);\n    log('findPlayerStats/http get', scrapePath);\n\n    return req.get(scrapePath).then((html) => {\n        log('findPlayerStats/http complete');\n\n        const stats = scrapePlayerStats(options, html);\n        return { name, region, platform, stats };\n    });\n}\n\n// Accepts an options object (taking precedence over defaultOptions)\n// and returns a new oversmash object\nmodule.exports = function main (callerOptions = {}) {\n    const sharedOptions = { ...defaultOptions, ...callerOptions };\n\n    // Make sure we know how the caller expects names to be normalized\n    if (['snake', 'camel'].indexOf(sharedOptions.normalizeNamesAs) === -1) {\n        throw new Error('normalizeNamesAs must be set to \\'snake\\' or \\'camel\\'');\n    }\n\n    // This will blow-up if the caller overrides callerOptions in weird ways\n    const defaultRegion = sharedOptions.defaultRegion;\n    const defaultPlatform = sharedOptions.defaultPlatform;\n\n    // Prepare an instance of `request` configured with requestOptions\n    // as provided by the caller (or from defaultOptions)\n    const req = request.defaults(sharedOptions.requestOptions);\n\n    log('default region', defaultRegion);\n    log('default platform', defaultPlatform);\n\n    return {\n        player (name) {\n            return findPlayer(req, sharedOptions, name);\n        },\n\n        playerStats (name, region = defaultRegion, platform = defaultPlatform) {\n            return findPlayerStats(req, sharedOptions, platform, region, name);\n        }\n    };\n};\n"},"lineCount":104}},"error":null,"hash":"c179d5207e7f4c01f15d90045dd7d12f","cacheData":{"env":{}}}