{"id":"../node_modules/overstat/lib/scraper.js","dependencies":[{"name":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/package.json","includedInParent":true,"mtime":1611186518316},{"name":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/package.json","includedInParent":true,"mtime":1611186771388},{"name":"cheerio","loc":{"line":1,"column":25},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/scraper.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/cheerio/index.js"},{"name":"debug","loc":{"line":2,"column":23},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/scraper.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/node_modules/debug/src/browser.js"},{"name":"no-case","loc":{"line":3,"column":24},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/scraper.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/no-case/no-case.js"},{"name":"camelcase","loc":{"line":4,"column":27},"parent":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/lib/scraper.js","resolved":"/Users/doriancrutcher/Documents/BlockHeads/blockgames/blockwatch/blockwatchv4/node_modules/overstat/node_modules/camelcase/index.js"}],"generated":{"js":"const cheerio  = require('cheerio');\nconst debug  = require('debug');\nconst noCase  = require('no-case');\nconst camelCase  = require('camelcase');\n\nconst log = debug('oversmash');\nconst careerTypes = ['quickplay', 'competitive'];\n\n// A map of strings used to rename stat groups to something easier\n// to use/read. Keep in mind stat group names are lowercased before\n// being matched to this list\nconst statGroupNames = {\n    'hero specific': 'hero',\n    'match awards': 'awards',\n    'miscellaneous': 'misc'\n};\n\n// Renames heroes such as lúcio or torbjörn to more developer-friendly names\nconst friendlyHeroNames = {\n    'torbjörn': 'torbjorn',\n    'lúcio': 'lucio',\n    'd.va': 'dva',\n    'soldier: 76': 'soldier76',\n    'all heroes': 'all'\n};\n\n// Very lazy diacritics replacement map for the few cases where\n// we need them. While lazy, this is preferred to bringing in a full\n// folding library/system\nconst lazyDiacriticsMap = {\n    'ö': 'o',\n    'ú': 'u'\n};\n\n// Used to find special characters and extract them, in order to match\n// against lazyDiacriticsMap\nconst lazyDiacriticsRegex = new RegExp(`([${Object.keys(lazyDiacriticsMap).join('')}])`, 'i');\n\n// Methods used to build finders for different elements in the html\nconst finders = {\n    heroList (careerType) {\n        return `#${careerType} .career-stats-section select[data-js=career-select] option`;\n    },\n\n    heroCards (careerType) {\n        return `#${careerType} .career-stats-section div[data-group-id=stats]`;\n    }\n};\n\n// If options.normalizeNames is enabled, things like achievement\n// and stat names are normalized to a more developer-friendly format\n// through this method\nfunction normalizeKeyName (options, name) {\n    if (options.normalizeNames) {\n        let newName = noCase(name.replace('\\'', ''), null, '_');\n        const diacMatch = newName.match(lazyDiacriticsRegex);\n\n        // Replace diacritics with their ascii equivalent (e.g ö -> o)\n        if (diacMatch && lazyDiacriticsMap[diacMatch[1]]) {\n            newName = newName.replace(diacMatch[1], lazyDiacriticsMap[diacMatch[1]]);\n        }\n\n        if (options.normalizeNamesAs === 'camel') {\n            return camelCase(newName);\n        }\n\n        return newName;\n    }\n\n    return name;\n}\n\n// Much like normalizeKeyName, attempts to intelligently normalize\n// a value, i.e turning a string '123' or '12345,35' to a number, etc\nfunction normalizeValue (options, value) {\n    if (options.normalizeValues) {\n        if ((value.indexOf('%') !== -1 && !options.percentsToInts) || value.indexOf(':') !== -1) {\n            // If percentsToInts is not true, don't convert percentages\n            // to integers - just pass the value through\n            //\n            // Additionally, also just pass the value through if the value\n            // contains colons, indicating this is a time value\n            return value;\n        } else if (value.indexOf('.') !== -1) {\n            // Handle floating-point values\n            return parseFloat(value.replace(',', ''));\n        }\n\n        // Everything that goes this far is assumed to be possible\n        // to safely parse as an int\n        return parseInt(value.replace(',', ''), 10);\n    }\n\n    return value;\n}\n\n// Looks at the hero selector, and builds an object allowing us to\n// later on pair each hero name with their stats\nfunction buildHeroList (p, careerType) {\n    // Each career type has a selector for the specific hero, as well\n    // as an 'All heroes' option. The 'value' attribute on these elements\n    // match the 'data-category-id' attribute on the divs containing the\n    // actual card data\n    const heroes = {};\n\n    // select option[value]\n    p(finders.heroList(careerType)).each((i, e) => {\n        const elem = p(e);\n        heroes[elem.attr('value')] = elem.text();\n    });\n\n    return heroes;\n}\n\nfunction extractStatsFromGroup (options, p, group) {\n    const groupStats = {};\n\n    group.find('tbody tr').each((i, e) => {\n        const elems = p(e).find('td');\n        groupStats[normalizeKeyName(options, elems.first().text())] = normalizeValue(options, elems.last().text());\n    });\n\n    return groupStats;\n}\n\n// Extracts all stats groups, given 'container', a cheerio object scoped to the\n// correct parent element\nfunction extractStatGroups (options, name, p, container) {\n    const groups = { name };\n\n    container.find('.data-table').each((i, e) => {\n        const elem = p(e);\n        let groupName = elem.find('.stat-title').text();\n\n        if (options.normalizeNames) {\n            groupName = groupName.toLowerCase();\n\n            if (statGroupNames[groupName]) {\n                groupName = statGroupNames[groupName];\n            }\n        }\n\n        groups[normalizeKeyName(options, groupName)] = extractStatsFromGroup(options, p, elem);\n    });\n\n    return groups;\n}\n\n// Gathers information from all the hero cards, performing transformations\n// as necessary\nfunction gatherHeroStats (options, p, careerType, heroes) {\n    const heroStats = {};\n\n    p(finders.heroCards(careerType)).each((i, e) => {\n        const elem = p(e);\n\n        let rawName = heroes[elem.attr('data-category-id')];\n        let heroName = rawName;\n\n        if (options.normalizeNames) {\n            heroName = heroName.toLowerCase();\n\n            // Remap hero names to their developer-friendly counterparts\n            if (friendlyHeroNames[heroName]) {\n                heroName = friendlyHeroNames[heroName];\n            }\n        }\n\n        heroStats[heroName] = extractStatGroups(options, heroName, p, elem);\n\n        if (heroStats[heroName]) {\n            heroStats[heroName].rawName = rawName;\n        }\n\n        log('scrape', careerType, heroName, heroStats[heroName]);\n    });\n\n    return heroStats;\n}\n\nfunction extractCompetitiveRank (options, p) {\n    return normalizeValue(options, p('.masthead-player .competitive-rank .h5').text());\n}\n\nfunction gatherAchievements (options, p) {\n    const achievements = [];\n\n    p('.achievement-card').each((i, e) => {\n        const elem = p(e);\n        const achieved = !elem.hasClass('m-disabled');\n        const rawName = elem.find('.media-card-title').text();\n        const name = normalizeKeyName(options, rawName);\n\n        achievements.push({ rawName, name, achieved });\n    });\n\n    return achievements;\n}\n\nmodule.exports = function scrapePlayerStats (options, html) {\n    const stats = {};\n    const p = cheerio.load(html);\n\n    stats.competitiveRank = extractCompetitiveRank(options, p);\n    stats.achievements = gatherAchievements(options, p);\n\n    for (const careerType of careerTypes) {\n        log('start career stats', careerType);\n\n        const heroes = buildHeroList(p, careerType);\n        stats[careerType] = gatherHeroStats(options, p, careerType, heroes);\n\n        log('end career stats', careerType);\n    }\n\n    return stats;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/overstat/lib/scraper.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}}],"sources":{"../node_modules/overstat/lib/scraper.js":"const cheerio  = require('cheerio');\nconst debug  = require('debug');\nconst noCase  = require('no-case');\nconst camelCase  = require('camelcase');\n\nconst log = debug('oversmash');\nconst careerTypes = ['quickplay', 'competitive'];\n\n// A map of strings used to rename stat groups to something easier\n// to use/read. Keep in mind stat group names are lowercased before\n// being matched to this list\nconst statGroupNames = {\n    'hero specific': 'hero',\n    'match awards': 'awards',\n    'miscellaneous': 'misc'\n};\n\n// Renames heroes such as lúcio or torbjörn to more developer-friendly names\nconst friendlyHeroNames = {\n    'torbjörn': 'torbjorn',\n    'lúcio': 'lucio',\n    'd.va': 'dva',\n    'soldier: 76': 'soldier76',\n    'all heroes': 'all'\n};\n\n// Very lazy diacritics replacement map for the few cases where\n// we need them. While lazy, this is preferred to bringing in a full\n// folding library/system\nconst lazyDiacriticsMap = {\n    'ö': 'o',\n    'ú': 'u'\n};\n\n// Used to find special characters and extract them, in order to match\n// against lazyDiacriticsMap\nconst lazyDiacriticsRegex = new RegExp(`([${Object.keys(lazyDiacriticsMap).join('')}])`, 'i');\n\n// Methods used to build finders for different elements in the html\nconst finders = {\n    heroList (careerType) {\n        return `#${careerType} .career-stats-section select[data-js=career-select] option`;\n    },\n\n    heroCards (careerType) {\n        return `#${careerType} .career-stats-section div[data-group-id=stats]`;\n    }\n};\n\n// If options.normalizeNames is enabled, things like achievement\n// and stat names are normalized to a more developer-friendly format\n// through this method\nfunction normalizeKeyName (options, name) {\n    if (options.normalizeNames) {\n        let newName = noCase(name.replace('\\'', ''), null, '_');\n        const diacMatch = newName.match(lazyDiacriticsRegex);\n\n        // Replace diacritics with their ascii equivalent (e.g ö -> o)\n        if (diacMatch && lazyDiacriticsMap[diacMatch[1]]) {\n            newName = newName.replace(diacMatch[1], lazyDiacriticsMap[diacMatch[1]]);\n        }\n\n        if (options.normalizeNamesAs === 'camel') {\n            return camelCase(newName);\n        }\n\n        return newName;\n    }\n\n    return name;\n}\n\n// Much like normalizeKeyName, attempts to intelligently normalize\n// a value, i.e turning a string '123' or '12345,35' to a number, etc\nfunction normalizeValue (options, value) {\n    if (options.normalizeValues) {\n        if ((value.indexOf('%') !== -1 && !options.percentsToInts) || value.indexOf(':') !== -1) {\n            // If percentsToInts is not true, don't convert percentages\n            // to integers - just pass the value through\n            //\n            // Additionally, also just pass the value through if the value\n            // contains colons, indicating this is a time value\n            return value;\n        } else if (value.indexOf('.') !== -1) {\n            // Handle floating-point values\n            return parseFloat(value.replace(',', ''));\n        }\n\n        // Everything that goes this far is assumed to be possible\n        // to safely parse as an int\n        return parseInt(value.replace(',', ''), 10);\n    }\n\n    return value;\n}\n\n// Looks at the hero selector, and builds an object allowing us to\n// later on pair each hero name with their stats\nfunction buildHeroList (p, careerType) {\n    // Each career type has a selector for the specific hero, as well\n    // as an 'All heroes' option. The 'value' attribute on these elements\n    // match the 'data-category-id' attribute on the divs containing the\n    // actual card data\n    const heroes = {};\n\n    // select option[value]\n    p(finders.heroList(careerType)).each((i, e) => {\n        const elem = p(e);\n        heroes[elem.attr('value')] = elem.text();\n    });\n\n    return heroes;\n}\n\nfunction extractStatsFromGroup (options, p, group) {\n    const groupStats = {};\n\n    group.find('tbody tr').each((i, e) => {\n        const elems = p(e).find('td');\n        groupStats[normalizeKeyName(options, elems.first().text())] = normalizeValue(options, elems.last().text());\n    });\n\n    return groupStats;\n}\n\n// Extracts all stats groups, given 'container', a cheerio object scoped to the\n// correct parent element\nfunction extractStatGroups (options, name, p, container) {\n    const groups = { name };\n\n    container.find('.data-table').each((i, e) => {\n        const elem = p(e);\n        let groupName = elem.find('.stat-title').text();\n\n        if (options.normalizeNames) {\n            groupName = groupName.toLowerCase();\n\n            if (statGroupNames[groupName]) {\n                groupName = statGroupNames[groupName];\n            }\n        }\n\n        groups[normalizeKeyName(options, groupName)] = extractStatsFromGroup(options, p, elem);\n    });\n\n    return groups;\n}\n\n// Gathers information from all the hero cards, performing transformations\n// as necessary\nfunction gatherHeroStats (options, p, careerType, heroes) {\n    const heroStats = {};\n\n    p(finders.heroCards(careerType)).each((i, e) => {\n        const elem = p(e);\n\n        let rawName = heroes[elem.attr('data-category-id')];\n        let heroName = rawName;\n\n        if (options.normalizeNames) {\n            heroName = heroName.toLowerCase();\n\n            // Remap hero names to their developer-friendly counterparts\n            if (friendlyHeroNames[heroName]) {\n                heroName = friendlyHeroNames[heroName];\n            }\n        }\n\n        heroStats[heroName] = extractStatGroups(options, heroName, p, elem);\n\n        if (heroStats[heroName]) {\n            heroStats[heroName].rawName = rawName;\n        }\n\n        log('scrape', careerType, heroName, heroStats[heroName]);\n    });\n\n    return heroStats;\n}\n\nfunction extractCompetitiveRank (options, p) {\n    return normalizeValue(options, p('.masthead-player .competitive-rank .h5').text());\n}\n\nfunction gatherAchievements (options, p) {\n    const achievements = [];\n\n    p('.achievement-card').each((i, e) => {\n        const elem = p(e);\n        const achieved = !elem.hasClass('m-disabled');\n        const rawName = elem.find('.media-card-title').text();\n        const name = normalizeKeyName(options, rawName);\n\n        achievements.push({ rawName, name, achieved });\n    });\n\n    return achievements;\n}\n\nmodule.exports = function scrapePlayerStats (options, html) {\n    const stats = {};\n    const p = cheerio.load(html);\n\n    stats.competitiveRank = extractCompetitiveRank(options, p);\n    stats.achievements = gatherAchievements(options, p);\n\n    for (const careerType of careerTypes) {\n        log('start career stats', careerType);\n\n        const heroes = buildHeroList(p, careerType);\n        stats[careerType] = gatherHeroStats(options, p, careerType, heroes);\n\n        log('end career stats', careerType);\n    }\n\n    return stats;\n};\n"},"lineCount":218}},"error":null,"hash":"16de107a8f5a71d9b1c1d71eb955d5a3","cacheData":{"env":{}}}